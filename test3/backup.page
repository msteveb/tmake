title "Backup/Restore"
label "Backup/Restore"

accesslevel admin

setmode edit
storage none

bar "Restore Device Configuration from File"

text {
	display {
		if {[cgi auth role] eq "admin"} {
			puts "<p>Sorry, you do not have permission to restore this device's configuration.</p>"
		} else {
			puts "<p>Select a file from your host and then press the <b>Restore Configuration</b> button to restore this device's configuration from that file.</p>"
		}
	}
}

upload file {
	label "File to Restore"
	help {Browse for the file to restore settings from}
	display {
		if {[cgi auth role] ni {factory support install}} {
			cgi return done
		}
	}
}

button restore {
	label "Restore Configuration"

	display {
		if {[cgi auth role] ni {factory support install}} {
			cgi return done
		}
	}

	submit {
		if {[cgi auth role] ni {factory support install}} {
			cgi error "No authority to perform this function"
			cgi return done
		}

		if {[cgi file length file] < 1} {
			cgi error "No file chosen"
			return
		}

		cgi file save file /tmp/restore

		try {
			exec config-backup-restore /tmp/restore
			reboot_system "Configuration Restored"
		} on error error {
			cgi error "Not a valid configuration"
		}
	}
}

text {str {<p></p>}}

bar "Backup Device Configuration to File"

text {
	str {<p>Press the <b>Backup Configuration</b> button and a date stamped
	file containing the current configuration will be downloaded and saved to
	your PC.</p>}
}

button backup {
	label "Backup Configuration"

	submit {
		set datestr [clock format [clock seconds] -format "%Y%m%d-%H%M%S"]
		set hoststr [info hostname]
		set savename $hoststr-backup-$datestr.bin
		set filename /tmp/restore.bin
		catch {exec config-backup-create >$filename}
		set ok 0

		catch {
			set size [file size $filename]
			set f [open $filename]

			cgi nodisplay
			cgi http header Content-Length $size
			cgi http header Content-Type application/octet-stream
			cgi http header Content-Disposition "attachment; filename=$savename"
			cgi http response 200

			$f copyto stdout

			close $f
			file delete $filename

			set ok 1
		}

		if {$ok} {
			cgi return done
		} else {
			cgi error "Error saving backup"
		}
	}
}
