# Copyright (c) 2012 WorkWare Systems http://www.workware.net.au/
# All rights reserved

# Module which provides auto-generation of build.spec files

proc tmake-genie {argv} {
	use getopt

	getopt {--force --genie argv} argv

	if {[file exists build.spec] && !$force} {
		puts "Warning: build.spec already exists - remove it first or use --force to overwrite"
		exit 1
	}

	set headers [glob -nocomplain *.h *.hpp]
	set src [glob -nocomplain *.c *.cpp *.cc *.cxx]

	# Categorise the sources
	set progsrc {}
	set testsrc {}
	set libsrc {}

	foreach i $src {
		if {[regexp {\<main[ \t]*\(} [readfile $i]]} {
			# Has main(), so must be executable source or test source
			if {[string match {*[tT]est*} $i]} {
				lappend testsrc $i
			} else {
				lappend progsrc $i
			}
		} else {
			lappend libsrc $i
		}
	}

	set libname [string tolower [file tail [pwd]]]

	set buildspec {}
	lappend buildspec "# This is a sample build.spec file generated by tmake --genie"
	lappend buildspec "# Edit it as required\n"
	if {[llength $headers]} {
		lappend buildspec "# Any non-private headers should be published"
		lappend buildspec "#PublishIncludes [join $headers]\n"
	}
	if {[llength $libsrc]} {
		lappend buildspec "# If this library is only used by local executables, remove --publish"
		lappend buildspec "Lib --publish $libname [join $libsrc]\n"
	}
	foreach i $progsrc {
		lappend buildspec "Executable [file rootname $i] $i"
	}
	foreach i $testsrc {
		lappend buildspec "Executable --test [file rootname $i] $i"
	}
	writefile build.spec [join $buildspec \n]\n
	puts "Created build.spec"

	if {[find-project-top] eq ""} {
		puts "Not already in a project, so creating project.spec"
		writefile project.spec {}
	}
	exit 0
}
