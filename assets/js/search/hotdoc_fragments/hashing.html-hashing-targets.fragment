fragment_downloaded_cb({"url":"hashing.html#hashing-targets","fragment":"Hashing targets\nAs explained above, even with hashing enabled (UseHashes on), tmake still only hashes\nsources, not targets (build products) by default. However sometimes it can be useful to hash\ntargets. Consider the following (contrived) example:\nNotice that VAR2 isn't used in config.h.in so changing the value won't change the value\nof the generated config.h. First build with the default value of VAR2=2\nNow build again, this time with VAR2=3\nNotice that even though config.h didn't change test-config.o was\nrebuilt.  This is true even if hashing is used. So now adding -hash\nto the template causes the checking on this target to use hashing\nrather than timestamps.\nThe first time it is rebuilt, it is considered changed because the hash has\nchanged from a timestamp to a hash:\nHowever subsequent builds only cause the template to be regenerated.\nBecause the hash is the same, and targets that depend on config.h are not rerun.\nThe use of target hashing can be particularly beneficial for generated header files\nthat are included by many source files that may be regenerated often. For example\nthe config header files generated by Kconfig\n"});