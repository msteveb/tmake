fragment_downloaded_cb({"url":"tmake.html#aliases","fragment":"Aliases\nFor most rules it is possible to identify the dependencies explicitly\nby name. However in some circumstances the name of the target may not\nbe known at the point that the rule is created. Consider the case\nwhere an executable needs to link against a library created in another\ndirectory of the project.\nIn order for this to work, the library in question needs to be\npublished. However the executable linking against the library doesn't\nknow whether the library will be a shared library or archive library,\nand thus it can't add a dependency on the published library file.\nThe answer is for the Lib rule to create an alias for the target file.\nIf the library as created as an archive library, we will have:\nThen, the executable can depend and link against foo which will\nbe resolved via the alias to the underlying target. Note that the alias\nname can by anything, but the \"name\" convention is used to avoid\nconflict with real files or targets.\n"});