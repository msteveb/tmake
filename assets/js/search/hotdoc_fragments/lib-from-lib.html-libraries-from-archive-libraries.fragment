fragment_downloaded_cb({"url":"lib-from-lib.html#libraries-from-archive-libraries","fragment":"Libraries from Archive Libraries\nUnder some circumstances it is necessary to build a target from targets\nacross multiple subdirectories. Consider the following (abbreviated) example from libgit2.\nThe final target is either an archive library (libgit2.a) or a shared library (libgit2.so)\nIt is composed of groups of objects from deps/http-parser, src, src/transports and possibly\ndeps/zlib and src/unix or src/win32.\nIt would be possible to build the library at the top level from objects in lower\nlevels, for example:\nHowever this forces all of the build rules (CFlags, IncludePaths, etc.) to\nbe specified at the top level. It is better if the components can be\nbuilt individually and then combined to form the final library.\ntmake supports this by allowing library objects to be combined into other archive\nand shared libaries. This is done as follows.\nThe special objects selector, <lib>name, is used\nto select all the objects from the corresponding published library.\n(Note that this is related to the mechanism which allows published\nlibraries to be found by other components with UseLibs)\nWhen the inputs to the git2 library are collected, the selector\nsuch as <lib>src is replaced with the objects that are listed\nas inputs to the src library. In addition, a dependency on the 'src'\nlibrary is added to the 'git2' library to ensure that the objects\nare available when required.\nThis approach has the advantage that the aggregate library can be created\nin any directory, not just a parent of each of the component libraries.\nThe same mechanism can be used for creating a shared libraries from other\nlibraries, and both shared and archive libraries can be used as the component\nlibraries.\nNote 1: The  selector selects the objects from the component library, not the library itself.\nNote 2: The component library must be published in order to be available.\nNote 3: When creating an aggregate shared library, the appropriate compile flags (e.g. $(SH_CFLAGS)\nmust be added to objects in the component libraries. tmake is not able to automatically\ndetermine if this restriction has been followed.\n"});