fragment_downloaded_cb({"url":"tmake.html#publish","fragment":"publish\nNormally any files referred to in a build.spec relate to files found in that directory,\nbut sometimes files need to be shared across directories.  Typically this will be:\nInstead of having each command that needs these things refer\nto the various directories that contain them, we \"publish\" these\nshared files to a top level directory, such as 'publish'\nIdeally we do this with hard links (if supported) so that\nif an error occurs (say in a header file) and the file is edited,\nit will be the original file that is edited.\nIf hard links aren't supported, soft links or simply copying will work too.\nUnlike Install where the installed files are never dependencies, these\npublished files become the dependency via the chain:\nA typical scenario is where a library and some header files need to be exported\nfrom a directory. build.spec would look something like this.\nThis will publish publish/include/{public1,public2}.h and publish/lib/libmy.a where\nthey will be available for targets in other directories.\nTo publish an executable (say, needed during the build):\nNow the directory that uses these published files does something like:\nHere we use  and  alias selectors to refer to the corresponding published targets.\nNote that the publish dir can be changed from the project.spec file. e.g.\n\nHeader files\nHost executables and scripts\nLibraries\n\n"});